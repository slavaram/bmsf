<apex:component id="OpportunityController" access="global" allowDML="true">
	<apex:attribute name="Controller" type="OpportunityEntity" access="global" description=""/>
	

	<script>
		j$ = jQuery.noConflict();
		function checking(id){
			alert(document.getElementById(id).selected);
		}
		
		function refreshWindow(){
			window.location.href=window.location.href;
		}
	
		function showDialog(stitle, sbody){
			var box = new SimpleDialog("hersh"+Math.random(), false); 
			parent.box = box; 
			box.setTitle(stitle); 
			box.createDialog(); 
			box.setWidth(350); 
			box.setContentInnerHTML("<p align='center'>" + sbody + "</p><p align='center'>Подождите</p>"); 
			box.setupDefaultButtons();
			box.show();
		}
		function hideDialog(){
			parent.window.box.hide(); 
		}
	</script>

	<style>
		.bEditBlock input{
			vertical-align: top !important;
		}
		textarea{
			width: 100%;
		}
		.fieldBlock{
			clear: both;
			position: relative;
		}
		.fieldBlock div{
			padding-right: 2px;
			float: left;
		}
		.remove{
			border: 0px !important;
			background: url({!$Resource.ImgClose}) no-repeat !important;
			width: 16px  !important;
			height: 16px  !important;
			text-indent: 2000px  !important;
			background-size: cover !important;
		}
		.tip{
			position: relative;
		}
		.tip .messageText{
			font-weight: bold;
		}
		
		.tip .description{
			padding-left: 8px
		}
		.showListButton, .hideListButton{
			display: none !important;
		}
	</style>
		<apex:actionFunction reRender="PanelFreezingToAction" name="rerenderFreezingToAction" status="StatusFreezing">
			<apex:param name="ParamisFreezing" assignTo="{!Controller.thisOpportunity.Freezing__c}" value="" />  
			<apex:param name="ParamisFreezingToAction" assignTo="{!Controller.thisOpportunity.FreezingToAction__c}" value="" /> 
		</apex:actionFunction>
		
		<apex:actionFunction reRender="MyActions" name="rerenderActions" status="StatusProduct" action="{!Controller.GetListActions}">
			<apex:param name="ParamProductId" assignTo="{!Controller.FieldProduct}" value="" />  
		</apex:actionFunction>

		<apex:actionFunction reRender="MyActions, MyActionsMode" name="rerenderModeActions" status="StatusActionsMode">
			<apex:param name="ParamActionsMode" assignTo="{!Controller.ActionsMode}" value="" />  
		</apex:actionFunction>

	    <!-- функции по изменению статуса -->
	    
		<apex:actionFunction reRender="OpportunityReasonRefusal, AutoTask" 
			name="rerenderReasonRefusal" 
			status="StatusReasonRefusal"
			action="{!Controller.AutoTask.SetAutoTask}"
		>
			<apex:param name="StageName" assignTo="{!Controller.thisOpportunity.StageName}" value="" />
			<apex:param name="AutoTaskStageName" assignTo="{!Controller.AutoTask.StageName}" value="" />  
		</apex:actionFunction>
	 
	 	<apex:actionFunction reRender="AutoTask" name="isNextTask" status="StatusAutoTask">
			<apex:param name="ParamisCreateNextTask" assignTo="{!Controller.AutoTask.isCreateNextTask}" value="" />  
		</apex:actionFunction>
		
		<apex:pageBlockSection title="Информация о заявке" columns="2">
			<apex:inputField value="{!Controller.thisOpportunity.AccountId}" required="true"/>
			<apex:pageblockSectionItem >
				<apex:outputLabel value="Статус заявки"/>
				<apex:outputPanel >
					<c:StageNameAndAutoTask ValueOpportunity="{!Controller.thisOpportunity}" AutoTask="{!Controller.AutoTask}"/>
				</apex:outputPanel>
			</apex:pageblockSectionItem> 
			<apex:pageBlockSectionItem >
				<apex:outputLabel value="Ожидаемая дата оплаты"></apex:outputLabel>
				<apex:inputField value="{!Controller.thisOpportunity.ExpectedPayDate__c}"></apex:inputField>
			</apex:pageBlockSectionItem>
			<apex:inputfield value="{!Controller.thisOpportunity.LoanStatus__c}" rendered="{!IF($User.Id == '005b0000000PBmZ' || $User.Id == '005b0000000v9gM' || $Profile.Id == '00eb0000000YHNT', true, false)}"/>
			<apex:outputField value="{!Controller.thisOpportunity.LoanStatus__c}" rendered="{!IF($User.Id != '005b0000000PBmZ' && $User.Id != '005b0000000v9gM' && $Profile.Id != '00eb0000000YHNT', true, false)}"/>

			<apex:pageBlockSectionItem >
				<apex:outputLabel value="Заморозка" for="Freezing"/>
				<apex:outputPanel >
					<table width="100%">
						<tr>
							<td width="7%">
								<apex:inputField value="{!Controller.thisOpportunity.Freezing__c}"
									onchange="rerenderFreezingToAction(this.checked, '')" id="Freezing"/>
							</td>
							<td width="78%">
								<apex:outputPanel id="PanelFreezingToAction">
									<apex:inputField value="{!Controller.thisOpportunity.FreezingToAction__c}" required="true" rendered="{!Controller.thisOpportunity.Freezing__c}"
										style="width: 100%"/>  
									<apex:inputText value="{!Controller.thisOpportunity.FreezingToAction__c}" disabled="true" rendered="{!not(Controller.thisOpportunity.Freezing__c)}"
										style="width: 100%"/>  
								</apex:outputPanel>
							</td>
							<td width="15%" style="padding-left: 5px">
								<apex:actionStatus id="StatusFreezing" onstart="showDialog('Загрузка', 'Идет обработка');" onstop="hideDialog();">
									<!-- apex:facet name="start"><img src="{!$Resource.ImgLoader}"/></apex:facet -->   
								</apex:actionStatus>
							</td>
						</tr>
					</table>
				</apex:outputPanel>
			</apex:pageBlockSectionItem>



			<apex:pageBlockSectionItem >
				<apex:outputLabel value="{!$ObjectType.Opportunity.Fields.ReasonRefusal__c.Label}" for="FieldReasonRefusal"/>
				<apex:outputPanel id="OpportunityReasonRefusal">
					<apex:inputField value="{!Controller.thisOpportunity.ReasonRefusal__c}" id="FieldReasonRefusal" 
						required="{!or(Controller.thisOpportunity.StageName == 'Отказ', Controller.thisOpportunity.StageName == 'Бесплатно')}" />
				</apex:outPutPanel>
			</apex:pageBlockSectionItem>
			
		</apex:pageBlockSection>



		
		<apex:pageBlockSection title="Продукт и Мероприятия" columns="1">
			<apex:pageBlockSectionItem >
				<apex:outputLabel value="{!$ObjectType.Opportunity.Fields.ProductId__c.Label}" for="Product"/>
				<apex:outputPanel >
					<div class="fieldBlock">
						<div>
							<apex:inputField value="{!Controller.thisOpportunity.ProductId__c}" required="true" id="Product" onchange="rerenderActions(this.value)">
							</apex:inputField>
						</div>
						<div>
							<apex:actionStatus id="StatusProduct" onstart="showDialog('Загрузка', 'Идет обработка');" onstop="hideDialog();">
								<!--  apex:facet name="start"><img src="{!$Resource.ImgLoader}"/></apex:facet -->   
							</apex:actionStatus>
						</div>
					</div>


				</apex:outputPanel>
			</apex:pageBlockSectionItem>

			<apex:pageBlockSectionItem rendered="{!or( $Profile.Name == 'Системный администратор', $Profile.Name == 'Аналитик' )}">
				<apex:outputLabel value="Выберите режим просмотра"/>
				<apex:outputPanel id="MyActionsMode">
					<div class="fieldBlock">
						<div>
							<apex:selectRadio value="{!Controller.ActionsMode}"
								onchange="rerenderModeActions(this.value)">
								<apex:selectOption itemValue="Мероприятия" itemLabel="Мероприятия"/>
								<apex:selectOption itemValue="Коды мероприятия" itemLabel="Коды мероприятия"/>
							</apex:selectRadio>
						</div>
						<div>
							<apex:actionStatus id="StatusActionsMode" onstart="showDialog('Загрузка', 'Идет обработка');" onstop="hideDialog();">
								<!-- <!-- apex:facet name="start"><img src="{!$Resource.ImgLoader}"/></apex:facet --->    -->
							</apex:actionStatus>
						</div>
						<div>
							<apex:commandButton value="Добавить" action="{!Controller.addNewAction}"
								rendered="{!Controller.ActionsMode == 'Коды мероприятия'}"/>
						</div>
					</div>
				</apex:outputPanel>
			</apex:pageBlockSectionItem>
		</apex:pageBlockSection>
		<apex:pageBlockSection title="Мероприятия" columns="1" showHeader="false" id="MyActions">
			<apex:pageBlockSectionItem >
				<apex:outputLabel value="Выберите мероприятия"/>
				<apex:outputPanel >
					<apex:pageMessage summary="{!if( isBlank(Controller.thisOpportunity.ProductId__c) , 'Не выбран продукт', 'Доступных мероприятий нет'  )}"
						severity="info" 
						strength="1"
						rendered="{!Controller.CountOfActions == 0}"/>
					<apex:pageBlockTable value="{!Controller.Actions}" var="Action" id="Actions" rendered="{!Controller.CountOfActions > 0}">
						<apex:column >
							<apex:facet name="header">
								Главное мероприятие
							</apex:facet>
							<apex:outputText value="{!Action.ParentName}"/>
						</apex:column>

						<apex:column >
							<apex:facet name="header">
								Мероприятия
							</apex:facet>
							
							<apex:outputPanel rendered="{!not(Action.isDeleted)}">
								<div class="requiredInput">
								<div class="requiredBlock"></div>
								<apex:selectList value="{!Action.ActionId}" multiselect="false" size="1"
									rendered="{!Controller.ActionsMode == 'Мероприятия'}" >
									<apex:selectOptions value="{!Action.ListActions}"/>
									<apex:actionsupport event="onchange" reRender="Actions" action="{!Action.refresh}" status="ItemAction"/>
								</apex:selectList>
								
								<apex:inputText value="{!Action.ActionId}"
									rendered="{!Controller.ActionsMode == 'Коды мероприятия'}">
									<apex:actionsupport event="onchange" reRender="Actions" action="{!Action.refresh}" status="ItemAction"/>
								</apex:inputText>
								
								<apex:actionStatus id="ItemAction" >
									<apex:facet name="start"><img src="{!$Resource.ImgLoader}"/></apex:facet>   
								</apex:actionStatus>
								
								</div>
							</apex:outputPanel>
							<apex:outputPanel rendered="{!Action.isDeleted}">
								<apex:outputText value="{!Action.ActionId}" />
							</apex:outputPanel>
							

						</apex:column>
						<apex:column >
							<apex:facet name="header">
								<apex:outputText value="{!$ObjectType.Action__c.Fields.Name.Label}"/>
							</apex:facet>
							<apex:outputText value="{!Action.CurrentAction.Name}"/>
						</apex:column>

						<apex:column >
							<apex:facet name="header">
								<apex:outputText value="{!$ObjectType.Action__c.Fields.StartDate__c.Label}"/>
							</apex:facet>
							<apex:outputField value="{!Action.CurrentAction.StartDate__c}"/>
						</apex:column>
						<apex:column >
							<apex:facet name="header">
								<apex:outputText value="{!$ObjectType.Action__c.Fields.EndDate__c.Label}"/>
							</apex:facet>
							<apex:outputField value="{!Action.CurrentAction.EndDate__c}"/>
						</apex:column>

						<apex:column rendered="{!Controller.ActionsMode == 'Коды мероприятия'}">
							<apex:facet name="header"></apex:facet>
							<apex:commandButton action="{!Action.Remove}" 
								rendered="{!not(Action.isDeleted)}"
								value="Удалить" 
								styleClass="remove"/>
							<apex:outputText value="Мероприятие будет удалено"
								rendered="{!Action.isDeleted}"/>
						</apex:column>
					</apex:pageBlockTable>
					
				</apex:outputPanel>
			</apex:pageBlockSectionItem>
		</apex:pageBlockSection>
		
		<apex:pageBlockSection title="Дополнительная информация" columns="2">
               <apex:repeat value="{!$ObjectType.Opportunity.FieldSets.AdditionalInformation}" var="field">
					<apex:inputfield value="{!Controller.thisOpportunity[field]}" required="{!field.Required}"/>
                </apex:repeat>
          		<apex:repeat id="InCallId" value="{!$ObjectType.Opportunity.FieldSets.InCall}" var="field">
					<apex:inputfield rendered="{!Controller.thisOpportunity.Source__c == 'звонок клиента'}" value="{!Controller.thisOpportunity[field]}" required="{!field.Required}"/>
                </apex:repeat>
                 <apex:repeat id="OutCallId" value="{!$ObjectType.Opportunity.FieldSets.OutCall}" var="field">
					<apex:inputfield rendered="{!Controller.thisOpportunity.Source__c == 'база клиентов'}" value="{!Controller.thisOpportunity[field]}" required="{!field.Required}"/>
                </apex:repeat> 
               
		</apex:pageBlockSection>

		<apex:pageBlockSection title="Системные поля" columns="2" rendered="{!or( $Profile.Name == 'Системный администратор', $Profile.Name == 'Аналитик' )}">
               <apex:repeat value="{!$ObjectType.Opportunity.FieldSets.SystemFields}" var="field">
					<apex:inputfield value="{!Controller.thisOpportunity[field]}" required="{!field.Required}"/>
                </apex:repeat>
               
		</apex:pageBlockSection>		
		

</apex:component>